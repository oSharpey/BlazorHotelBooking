@page "/hoteledit"
@page "/hoteledit/{id:int}"
@using BlazorHotelBooking.Shared
@inject HttpClient http
@inject NavigationManager NavigationManager

@if (Id is null)
{
    <PageTitle>Add New Hotel</PageTitle>
    <h3>Add New Hotel</h3>
}
else
{
    <PageTitle> Edit @selectedHotel.Name </PageTitle>
    <h3>@selectedHotel.Name</h3>
}

<EditForm Model="selectedHotel" OnSubmit="HandleSubmit">

    <div>
        <label for="Id">Id</label>
        <InputNumber id="Id" @bind-Value="selectedHotel.Id" class="form-control" />
    </div>
    <div>
        <label for="Name">Name</label>
        <InputText id="Name" @bind-Value="selectedHotel.Name" class="form-control" />
    </div>
    <div>
        <label for="SBPrice">Single Room Price</label>
        <InputNumber id="SBPrice" @bind-Value="selectedHotel.SBPrice" class="form-control" />
    </div>
    <div>
        <label for="DBPrice">Doule Room Price</label>
        <InputNumber id="DBPrice" @bind-Value="selectedHotel.DBPrice" class="form-control" />
    </div>
    <div>
        <label for="FamPrice">Family Room Price</label>
        <InputNumber id="FamPrice" @bind-Value="selectedHotel.FamPrice" class="form-control" />
    </div>
    <div>
        <label for="Spaces">Spaces</label>
        <InputNumber id="Spaces" @bind-Value="selectedHotel.Spaces" class="form-control" />
    </div>
    <div>
        <label for="Description">Description</label>
        <InputText id="Description" @bind-Value="selectedHotel.Description" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    @if(Id is not null)
    {
        <button type="button" class="btn btn-danger" @onclick="DeleteHotel">Delete</button>
    }
</EditForm>


@code {
    [Parameter]
    public int? Id { get; set; }

    private Hotel selectedHotel = new Hotel { Name = "New Hotel" };

    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            var result = await http.GetFromJsonAsync<Hotel>($"api/hotel/{Id}");
            if (result is not null)
            {
                selectedHotel = result;
            }
        }
    }

    async Task DeleteHotel()
    {
        await http.DeleteAsync($"api/hotel/{Id}");
        NavigationManager.NavigateTo("/hoteladmin");
    }

    async Task HandleSubmit()
    {
        if(Id is null)
        {
            await http.PostAsJsonAsync("/api/hotel", selectedHotel);
        }
        else
        {
            await http.PutAsJsonAsync($"api/hotel/{Id}", selectedHotel);
        }
        NavigationManager.NavigateTo("/hoteladmin");
    }
}
